
package WSKConfiguration;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Configuration", targetNamespace = "http://WS/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Configuration {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://WS/", className = "WSKConfiguration.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.AddResponse")
    @Action(input = "http://WS/Configuration/addRequest", output = "http://WS/Configuration/addResponse")
    public boolean add(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "remove", targetNamespace = "http://WS/", className = "WSKConfiguration.Remove")
    @ResponseWrapper(localName = "removeResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.RemoveResponse")
    @Action(input = "http://WS/Configuration/removeRequest", output = "http://WS/Configuration/removeResponse")
    public void remove(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://WS/", className = "WSKConfiguration.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.UpdateResponse")
    @Action(input = "http://WS/Configuration/updateRequest", output = "http://WS/Configuration/updateResponse")
    public void update(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isKlient", targetNamespace = "http://WS/", className = "WSKConfiguration.IsKlient")
    @ResponseWrapper(localName = "isKlientResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.IsKlientResponse")
    @Action(input = "http://WS/Configuration/isKlientRequest", output = "http://WS/Configuration/isKlientResponse")
    public boolean isKlient(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isOnline", targetNamespace = "http://WS/", className = "WSKConfiguration.IsOnline")
    @ResponseWrapper(localName = "isOnlineResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.IsOnlineResponse")
    @Action(input = "http://WS/Configuration/isOnlineRequest", output = "http://WS/Configuration/isOnlineResponse")
    public boolean isOnline(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "online", targetNamespace = "http://WS/", className = "WSKConfiguration.Online")
    @ResponseWrapper(localName = "onlineResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.OnlineResponse")
    @Action(input = "http://WS/Configuration/onlineRequest", output = "http://WS/Configuration/onlineResponse")
    public void online(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "offline", targetNamespace = "http://WS/", className = "WSKConfiguration.Offline")
    @ResponseWrapper(localName = "offlineResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.OfflineResponse")
    @Action(input = "http://WS/Configuration/offlineRequest", output = "http://WS/Configuration/offlineResponse")
    public void offline(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "newGrup", targetNamespace = "http://WS/", className = "WSKConfiguration.NewGrup")
    @ResponseWrapper(localName = "newGrupResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.NewGrupResponse")
    @Action(input = "http://WS/Configuration/newGrupRequest", output = "http://WS/Configuration/newGrupResponse")
    public void newGrup(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns WSKConfiguration.Person
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPerson", targetNamespace = "http://WS/", className = "WSKConfiguration.GetPerson")
    @ResponseWrapper(localName = "getPersonResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.GetPersonResponse")
    @Action(input = "http://WS/Configuration/getPersonRequest", output = "http://WS/Configuration/getPersonResponse")
    public Person getPerson(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "aut", targetNamespace = "http://WS/", className = "WSKConfiguration.Aut")
    @ResponseWrapper(localName = "autResponse", targetNamespace = "http://WS/", className = "WSKConfiguration.AutResponse")
    @Action(input = "http://WS/Configuration/autRequest", output = "http://WS/Configuration/autResponse")
    public boolean aut(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Integer> arg1);

}
